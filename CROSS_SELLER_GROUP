--This accesses customer data and returns information on customers that are split between sellers in the same country.

--The below CTE allows you to create a field with the top of tree customer ID.  If there is a global ID, that is the top of tree. Otherwise the top of tree ID is the local ID
--I used a CTE to avoid issues with window functions later in the query
WITH TOTCOUNT AS
(
  SELECT
    CASE
      WHEN CST.GLOBAL_CUST_ID IS NULL
      THEN CST.LOCAL_CUST_ID
      ELSE CST.GLOBAL_CUST_ID END AS "TOT_CUSTOMER_ID"
    , CASE
      WHEN CST.GLOBAL_CUST_ID IS NULL
      THEN CST.LOCAL_CUST_NAME
      ELSE CST.GLOBAL_CUST_NAME END AS "TOT_CUSTOMER_NAME"
    , CTRY.SALES_GROUP_COUNTRY
    , COUNT(DISTINCT CST.SALES_GROUP_ID) as "COUNT_SG"
  FROM CUST.CUSTOMER_DETAILS CST
  LEFT OUTER JOIN
--The below subquery is used to take the beginning of the sales group name to get the sales group country, including accounting for edge cases in Dubai and Abu Dhabi.
--This subquery also makes the group by statment of this CTE easier
  (
    SELECT DISTINCT
      CASE WHEN (TRIM(LEFT(SALES_GROUP_NAME, (POSITION(' - ', SALES_GROUP_NAME))))) in ('Dubai', 'Abu Dhabi')
      THEN 'AE'
      ELSE (TRIM(LEFT(SALES_GROUP_NAME, (POSITION(' - ', SALES_GROUP_NAME))))) END AS "SALES_GROUP_COUNTRY"
      , SALES_GROUP_NAME
    FROM CUST.CUSTOMER_DETAILS
  ) CTRY
  ON CST.SALES_GROUP_NAME = CTRY.SALES_GROUP_NAME
  WHERE
    NOT
      (CASE
      WHEN NOT (CST.GLOBAL_CUST_ID IS NULL)
      THEN CST.LOCAL_CUST_ID
      ELSE CST.GLOBAL_CUST_NAME END = 'UNASSIGNED')
    AND NOT CST.SALES_GROUP_ID LIKE ('G%')
  GROUP BY
    CASE
      WHEN (CST.GLOBAL_CUST_ID IS NULL)
      THEN CST.LOCAL_CUST_ID
      ELSE CST.GLOBAL_CUST_ID END
    , CASE
      WHEN (CST.GLOBAL_CUST_ID IS NULL)
      THEN CST.LOCAL_CUST_NAME
      ELSE A.GLOBAL_CUST_NAME END
    , CTRY.SALES_GROUP_COUNTRY
)

SELECT DISTINCT
  CUST.GEOGRAPHY_NAME
  , CUST.MARKET_NAME
  , TOT.COVERAGE_COUNTRY
  , TOT.TOT_CUSTOMER_ID
  , TOT.TOT_CUSTOMER_NAME
  , CUST.GLOBAL_CUST_ID
  , COUNT (DISTINCT CUST.INDUSTRY_CODE) AS "COUNT_INDUSTRIES)
  , LISTAGG(DISTINCT CUST.INDUSTRY_CODE, ', ') WITHIN GROUP (ORDER BY CUST.INDUSTRY_CODE) AS "INDUSTRY_CODES"
  , CUST.SALES_GROUP_ID
  , CUST.SALES_GROUP_NAME
  , CAST(TOT.COUNT_SG AS INT) AS "COUNT_OF_SG_BY_TOT_ID_AND_COUNTRY"
  , CUST.SEGMENT_DESC
  , CUST.SUB_SEGMENT_DESC
  , COUNT(CUST.CUST_RECORD) AS "COUNT_CUST_RECORD"
FROM CUST.CUST_DETAILS CUST
  LEFT OUTER JOIN TOTCOUNT TOT
    ON TOT.TOT_CUSTOMER_ID = 
      (CASE
        WHEN CUST.GLOBAL_CUST_ID IS NULL
      THEN CUST.LOCAL_CUST_ID
      ELSE CUST.GLOBAL_CUST_ID END)
    AND (CASE WHEN (TRIM(LEFT(SALES_GROUP_NAME, (POSITION(' - ', SALES_GROUP_NAME))))) in ('Dubai', 'Abu Dhabi')
      THEN 'AE'
      ELSE (TRIM(LEFT(SALES_GROUP_NAME, (POSITION(' - ', SALES_GROUP_NAME))))) END) = TOT.SALES_GROUP_COUNTRY
WHERE
  NOT((CASE
      WHEN CST.GLOBAL_CUST_ID IS NULL
      THEN CST.LOCAL_CUST_NAME
      ELSE CST.GLOBAL_CUST_NAME END) = 'UNASSIGNED')
  AND TOT.COUNT_SG >'1'
GROUP BY
  CUST.GEOGRAPHY_NAME
  , CUST.MARKET_NAME
  , TOT.COVERAGE_COUNTRY
  , TOT.TOT_CUSTOMER_ID
  , TOT.TOT_CUSTOMER_NAME
  , CUST.GLOBAL_CUST_ID
  , CUST.SALES_GROUP_ID
  , CUST.SALES_GROUP_NAME
  , TOT.COUNT_SG
  , CUST.SEGMENT_DESC
  , CUST.SUB_SEGMENT_DESC
ORDER BY
  TOT.TOT_CUSTOMER_ID;
